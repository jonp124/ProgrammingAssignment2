find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
help(read.table)
install.packages("swirl")
packageversion("swirl")
packageVersion("swirl")
library(swirl)
packageVersion(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
bye()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
my_vector <- m(1:20)
my_vector <- (1:20)
info()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
exit
power <- function(exponent) {
function(x) x^exponent
}
power(2)
f <- power(2)
f(2)
x <- matrix(0, nrow = 3, ncol = 3)
x
x <- matrix(1:9, nrow = 3, ncol = 3)
x
solve(x)
x <- matrix(c(2,4,-3,-7), nrow=2, ncol=2)
x
solve(x)
invertx <-solve(x)
invertx * x
x * invertx
x %*% invertx
m <- NULL
set <- function(y){x<<-y; m<<-NULL}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set=set, get=get, setmean=setmean, getmean=getmean)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
View(getmean)
getwd()
getwd()
setwd("~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2")
dir()
library("cachematrix.R")
library("cachematrix.R")
source(""cachematrix.R"")
source("cachematrix.R")
makeCacheMatrix()
cachesolve()
cacheSolve()
x <- matrix(c(2,4,-3,-7), nrow=2, ncol=2)
x
makeCacheMatrix(x)
cacheSolve(x)
cacheSolve(makeCacheMatrix(x))
cacheSolve(makeCacheMatrix(x))
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
makeCacheMatrix(x)
my_matrix <- makeCacheMatrix(x)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
ls()
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
x$getMatrix()
x$getInv
my_matrix$getInv
my_matrix$getInv()
my_matrix$setInv()
my_matrix <- makeCacheMatrix(matrx(2:6, nrow=2, ncol=4))
my_matrix
cacheSolve(my_matrix)
my_matrix <- makeCacheMatrix(matrix(2:6, nrow=2, ncol=4))
my_matrix
cacheSolve(my_matrix)
my_matrix <- makeCacheMatrix(matrix(rep(1,4), nrow=2, ncol=2))
cacheSolve(my_matrix)
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
x
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
y <- matrix(c(2,2,3,2), nrow=2, ncol=2)
y
cacheSolve(my_matrix)
my_matrix2 <- makeCacheMatrix(y)
cacheSolve(my_matrix)
cacheSolve(my_matrix2)
cacheSolve(my_matrix)
cacheSolve(my_matrix2)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
x
my_matrix <- makeCacheMatrix(x)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
x
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
x
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix2 <- makeCacheMatrix(y)
cacheSolve(my_matrix2)
cacheSolve(my_matrix)
cacheSolve(my_matrix2)
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Career/Comp Sci/Data Science Specialization - Coursera/ProgrammingAssignment2/cachematrix.R')
x
makeCacheMatrix(x)
my_matrix
my_matrix <- makeCacheMatrix(x)
cacheSolve(my_matrix)
cacheSolve(my_matrix)
